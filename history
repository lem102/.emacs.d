;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(ido-buffer-history query-replace-history file-name-history dired-regexp-history command-history minibuffer-history which-key-keymap-history swiper-history extended-command-history ido-file-history ivy-history compile-history counsel-M-x-history))
(setq ido-buffer-history '("*Help*"))
(setq query-replace-history '("xah-fly-keys-off" "jacob-turn-off-xah"))
(setq file-name-history '("/home/lem/Documents/clojure/" "/home/lem/.emacs.d/.git/info/exclude" "/home/lem/.emacs.d/.git/" "/home/lem/Documents/placementAssignments/" "/home/lem/Documents/grannieIPadInstructions/instructions.tex" "/home/lem/Documents/grannieIPadInstructions"))
(setq command-history '((swiper) (cider-jack-in nil) (swiper) (swiper) (cider-jack-in nil) (eww "clojure brave true") (process-menu-delete-process) (process-menu-mode) (eww-top-url) (eww "clojure for the brave and true") (xah-fly-keys-off) (cider-jack-in nil) (describe-key "\367" 1 nil) (swiper) (describe-key "o" 1 nil) (describe-key "," 1 nil) (kill-buffer "*Help*") (describe-key "" 1 nil) (which-key-show-keymap 'eww-mode-map) (which-key-show-keymap 'eww-mode-map) (eww "clojure for the brave and true") (cider-jack-in nil) (avy-goto-subword-1 97 nil) (ibuffer-filter-by-used-mode 'org-mode) (ibuffer-filter-by-used-mode 'dired-mode) (query-replace "jacob-turn-off-xah" "xah-fly-keys-off" nil 5302 5510 nil nil) (package-delete #s(package-desc hercules (20190929 637) "An auto-magical, which-key-based hydra banisher." ((emacs (24 4)) (which-key (3 3 2))) nil nil "c:/Users/lem/Documents/EMACS/emacshome/.emacs.d/elpa/hercules-20190929.637" ((:url . "https://gitlab.com/jjzmajic/hercules") (:maintainer "Uros Perisic") (:authors ("Uros Perisic")) (:keywords "convenience") (:commit . "031f8eec95240fc46481061f0f44822c0f7fe65e")) nil) nil nil) (xah-fly-keys-off) (describe-key "/m" 1 nil) (ibuffer nil) (describe-key "m" 1 nil) (describe-key "f" 1 nil) (describe-key "f" 1 nil) (which-key-show-keymap 'ibuffer-mode-map) (which-key-show-keymap 'ibuffer-mode-map) (which-key-show-keymap 'ibuffer-mode-map) (which-key-mode 'toggle) (which-key-mode 'toggle) (describe-key " id" 1 nil) (describe-key " ld" 1 nil) (which-key-show-keymap 'ibuffer-mode-map) (describe-key "o" 1 nil) (describe-key " m" 1 nil) (dired "c:/") (avy-goto-subword-1 119 nil) (avy-goto-subword-1 119 nil)))
(setq minibuffer-history '("clojure brave true" "clojure for the brave and true" "e" "w" "e" "w"))
(setq which-key-keymap-history '(#("eww-mode" 0 8 (ivy-index 0)) #("ibuffer-mode-map" 0 16 (ivy-index 0)) #("ibuffer-mode-ma" 0 15 (ivy-index 0)) #("ibuffer-mode" 0 12 (ivy-index 4))))
(setq swiper-history '(#("map" 0 3 (ivy-index 1)) #("hobbit v" 0 8 (ivy-index 3)) "nn" "recur" #("my-f" 0 4 (ivy-index 0)) #("defn" 0 4 (ivy-index 3)) "prev" #("(first [+])" 0 11 (ivy-index 0)) "first" #("first" 0 5 (ivy-index 0)) #("contains" 0 8 (ivy-index 0)) #("#{" 0 2 (ivy-index 0)) "diminish" #("cider" 0 5 (ivy-index 1)) #("avy" 0 3 (ivy-index 0)) #("* xah" 0 5 (ivy-index 0)) #("dired xah" 0 9 (ivy-index 1)) #("hercules" 0 8 (ivy-index 3)) "f" "q" "q"))
(setq extended-command-history '("swiper" "process-menu-mode" "eww-top-url" "swiper" "which-key-show-keymap" "ibuffer" "which-key-show-top-level"))
(setq ido-file-history '("rat" "."))
(setq ivy-history '(#(".cl" 0 3 (ivy-index 0)) #("eww" 0 3 (ivy-index 0)) #("core" 0 4 (ivy-index 0)) #("scra" 0 4 (ivy-index 0)) #("org" 0 3 (ivy-index 0)) #("herc" 0 4 (ivy-index 0)) #("messages" 0 8 (ivy-index 0))))
(setq compile-history '("test"))
(setq counsel-M-x-history '(#("^cider" 0 6 (ivy-index 0)) #("^cider-" 0 7 (ivy-index 0)) #("^process" 0 8 (ivy-index 1)) #("^xah-fly" 0 8 (ivy-index 1)) #("^cider-jack" 0 11 (ivy-index 0)) #("^cider-jac" 0 10 (ivy-index 0)) #("^package" 0 8 (ivy-index 0)) #("^" 0 1 (ivy-index 0)) #("^which-key-show" 0 15 (ivy-index 1)) #("^which" 0 6 (ivy-index 1)) #("^which-key-s" 0 12 (ivy-index 1)) #("^command" 0 8 (ivy-index 1)) #("^compile" 0 8 (ivy-index 0))))
